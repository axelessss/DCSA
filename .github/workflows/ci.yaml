name: CI

on:
  push:
    tags:
      - 'v*.*.*' # Событие для тегов

jobs:
  build:
    name: Ubuntu2204 gcc
    runs-on: ubuntu-22.04
    env:
      CC: gcc
      CXX: gcc
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt update
      - run: sudo apt install -y cmake
      - run: sudo apt install -y libssl-dev
      - run: sudo apt install -y g++

      - run: mkdir ./client/build/
      - run: mkdir ./server/build/

      - run: cd server/build/ && cmake ../ && make -j
      - run: cd client/build/ && cmake ../ && make -j

      - run: sh create_debpkg.sh client && sh create_debpkg.sh server
      - name: Upload artifact_client
        uses: actions/upload-artifact@v3
        with:
          name: app_client
          path: http-client-dsca.deb
      - name: Upload artifact_server
        uses: actions/upload-artifact@v3
        with:
          name: app_server
          path: http-server-dsca.deb

  docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - uses: actions/checkout@v3

      # Сборка Docker-образа для сервера
      - name: Build Docker Image for Server
        run: |
          docker build -t my-repo/server:latest -f server/Dockerfile .

      # Сборка Docker-образа для клиента
      - name: Build Docker Image for Client
        run: |
          docker build -t my-repo/client:latest -f client/Dockerfile .

      # Аутентификация в Docker Hub (или другом реестре)
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Загрузка Docker-образов
      - name: Push Server Image
        run: docker push my-repo/server:latest

      - name: Push Client Image
        run: docker push my-repo/client:latest

  release:
    name: Ubuntu2204 gcc upload release
    runs-on: ubuntu-22.04
    permissions:
        contents: write
    needs: build
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Убедитесь, что все теги доступны
      - uses: actions/download-artifact@v3
        with:
          name: app_client
          path: http-client-dsca.deb
      - uses: ncipollo/release-action@v1
        with:
          artifacts: http-client-dsca.deb
          tag: ${{ github.ref_name }} # Использует имя текущего тега
          token: ${{ secrets.GITHUB_TOKEN }}